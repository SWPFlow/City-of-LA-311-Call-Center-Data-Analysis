summarise(count = n()) %>%
group_by(CD)
mutate(req_prop = count / n())
request_data %>%
group_by(CD, RequestType) %>%
summarise(count = n()) %>%
group_by(CD) %>%
mutate(req_prop = count / n())
request_data %>%
group_by(CD, RequestType) %>%
summarise(count = n())
cd = request_data %>%
group_by(CD, RequestType) %>%
summarise(count = n())
cd %>%
group_by(CD) %>%
mutate(req_prop = count / n())
cd = cd %>%
group_by(CD) %>%
mutate(req_prop = count / sum(count))
cd
cd = request_data %>%
group_by(CD, RequestType) %>%
summarise(count = n())
cd = cd %>%
group_by(CD) %>%
mutate(req_prop = round(100 * count / sum(count),1))
cd
colnames(CD_summary)
merge(cd, CD_summary, by.x = CD, by.y = `Council District`, all.x = TRUE)
merge(cd, CD_summary, by.x = "CD", by.y = `Council District`, all.x = TRUE)
merge(cd, CD_summary, by.x = "CD", by.y = "Council District", all.x = TRUE)
cd_merged = merge(cd, CD_summary, by.x = "CD", by.y = "Council District", all.x = TRUE)
View(cd_merged)
cd = filter(cd, !is.na(CD))
cd_merged = merge(cd, CD_summary, by.x = "CD", by.y = "Council District", all.x = TRUE)
cd_merged %>%
filter(RequestType == "Bulky Items")
cor(filter(cd_merged, RequestType == "Bulky Items")[,c(4:8)])
cd_merged %>%
filter(RequestType == "Bulky Items") %>%
ggplot(aes(x = `Median Household Income($000s)`,
y = req_prop)) +
geom_point()
rm(cd)
cd_merged %>%
filter(RequestType == "Bulky Items") %>%
ggplot(aes(x = `Unemployment Rate`,
y = req_prop)) +
geom_point()
cd_merged %>%
filter(RequestType == "Graffiti Removal") %>%
ggplot(aes(x = `Median Household Income($000s)`,
y = req_prop)) +
geom_point()
cor(filter(cd_merged, RequestType == "Graffiti Removal")[,c(4:8)])
cd_merged %>%
filter(RequestType == "Graffiti Removal")
cd_merged %>%
filter(RequestType == "Bulky Items") %>%
ggplot(aes(x = `Unemployment Rate`,
y = req_prop)) +
geom_point()
cd_merged %>%
filter(RequestType == "Bulky Items") %>%
ggplot(aes(x = `Median Household Income($000s)`,
y = req_prop)) +
geom_point()
cd_merged %>%
filter(RequestType == "Graffiti Removal") %>%
ggplot(aes(x = `Median Household Income($000s)`,
y = req_prop)) +
geom_point()
View(type_summary)
cor(filter(cd_merged, RequestType == "Metal/Household Appliances")[,c(4:8)])
cd_merged %>%
filter(RequestType == "Metal/Household Appliances") %>%
ggplot(aes(x = `Median Household Income($000s)`,
y = req_prop)) +
geom_point()
cor(filter(cd_merged, RequestType == "Illegal Dumping Pickup")[,c(4:8)])
cd_merged %>%
filter(RequestType == "Illegal Dumping Pickup") %>%
ggplot(aes(x = `Unemployment Rate`,
y = req_prop)) +
geom_point()
cor(filter(cd_merged, RequestType == "Electronic Waste")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Dead Animal Removal")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Single Streetlight Issue")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Homeless Encampment")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Feedback")[,c(4:8)])
View(CD_summary)
unique(request_data$ZipCode)
setwd("~/Desktop/DSO545/Final project")
load("processed_requests2.RData")
zip_summary = read.csv("zip summary statistics.csv")
View(zip_summary)
request_data$duration = round((request_data$UpdatedDate-request_data$CreatedDate)/(60*60),2)
request_data = mutate(request_data, update_duration = ifelse(duration <= 0, 0, duration))
request_data$duration = NULL
request_data = select(request_data, RequestType, ZipCode, CD, CreatedDate, duration)
request_data = select(request_data, RequestType, ZipCode, CD, CreatedDate, update_duration)
zip = request_data %>%
group_by(ZipCode, RequestType) %>%
summarise(count = n()) %>%
group_by(ZipCode) %>%
mutate(req_prop = round(100 * count / sum(count),1))
View(zip)
zip = filter(zip, !is.na(ZipCode))
zip = filter(zip, !is.na(ZipCode), ZipCode != "")
zip = filter(zip, !is.na(ZipCode), ZipCode != "", ZipCode != "0")
zip_merged = merge(zip, zip_summary, by.x = "ZipCode", by.y = "Zip.Code")
View(zip_merged)
colnames(zip_merged)
zip_merged = select(zip_merged, ZipCode, RequestType, count, req_prop, Median.Age, Unemployment.rate, Median.Income)
cor(filter(zip_merged, RequestType == "Bulky Items")[,c(4:7)])
unique(zip_merged$RequestType)
cor(filter(zip_merged, RequestType == "Dead Animal Removal")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Graffiti Removal")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Homeless Encampment")[,c(4:7)])
cor(filter(zip_merged, RequestType == â€œMetal/Household Appliances")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Metal/Household Appliances")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Illegal Dumping Pickup")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Electronic Waste")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Report Water Waste")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Single Streetlight Issue")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Multiple Streetlight Issue")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Feedback")[,c(4:7)])
unique(zip_merged$RequestType)
cor(filter(cd_merged, RequestType == "Bulky Items")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Graffiti Removal")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Dead Animal Removal")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Homeless Encampment")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Electronic Waste")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Feedback")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Single Streetlight Issue")[,c(4:8)])
unique(zip_merged$RequestType)
cor(filter(cd_merged, RequestType == "Illegal Dumping Pickup")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Metal/Household Appliances")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Multiple Streetlight Issue")[,c(4:8)])
cor(filter(cd_merged, RequestType == "Report Water Waste")[,c(4:8)])
cor(CD_summary$`Median Household Income($000s)`, CD_summary$`Unemployment Rate`)
rm(population_zip, requests_zip, zip, zip_vec, zip_vec2)
rm(zip_summary)
View(CD_summary)
View(type_summary)
rm(cd_key_stats, cd_top_requests, employment_plot, income_plot)
View(type_summary)
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
View(cd_merged)
View(zip_merged)
colnames(zip_merged)
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
request_social_plot("Graffiti Removal", "Median.Income")
request_social_plot("Graffiti Removal", "Median.Income")
str(zip_merged)
request_social_plot <- function(req_type, social) {
zip_merged %>%
filter(RequestType == req_type) %>%
ggplot(aes(x = "Median.Income",
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. ", social)) +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Graffiti Removal", "Median.Income")
zip_merged %>%
filter(RequestType == "Graffiti Removal")
request_social_plot <- function(req_type, social) {
zip_merged %>%
filter(RequestType == req_type) %>%
ggplot(aes(x = `Median.Income`,
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. ", social)) +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Graffiti Removal", "Median.Income")
request_social_plot <- function(req_type, social) {
zip_merged %>%
filter(RequestType == req_type) %>%
ggplot(aes(x = `Metal/Household Appliances`,
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. ", social)) +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Graffiti Removal", "Median.Income")
request_social_plot <- function(req_type, social) {
zip_merged %>%
filter(RequestType == req_type) %>%
ggplot(aes(x = `Median.Income`,
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. ", social)) +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Metal/Household Appliances", "Median.Income")
request_social_plot <- function(req_type, social) {
zip_merged %>%
filter(RequestType == req_type) %>%
ggplot(aes(x = `Median.Age`,
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. ", social)) +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Feedback", "Median.Income")
request_social_plot <- function(req_type) {
zip_merged %>%
filter(RequestType == req_type) %>%
ggplot(aes(x = log(`Median.Income`),
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. Median Income")) +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Metal/Household Appliances")
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
save.image("~/Desktop/DSO545/Final project/fight-on/all_data_for_shiny.RData")
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
View(cd_merged)
View(CD_summary)
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
layout(matrix(c(1, 2), ncol = 2), widths=c(4, 1))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text("trial")
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
layout(matrix(c(1, 2), ncol = 2), widths=c(4, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
layout(matrix(c(1, 2), ncol = 2), widths=c(4, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text("trial")}
text("trial")
layout(matrix(c(1, 2), ncol = 2), widths=c(4, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text("trial")
layout(matrix(c(1, 2), ncol = 2), widths=c(4, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text(x = 0.5, y = 0.5, "trial")
layout(matrix(c(1, 2), ncol = 2), widths=c(6, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text(x = 0.5, y = 0.5, "trial")
?text
View(type_summary)
layout(matrix(c(1, 2), ncol = 2), widths=c(6, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text(x = 0.5, y = 0.3, "efficieny above average", col = "#35978f")
text(x = 0.5, y = 0.6, "efficieny below average", col = "#bf812d")
shiny::runApp('fight-on/Shiny_cd_summary')
layout()
?layout
layout(matrix(c(1, 2), ncol = 2), widths=c(6, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text(x = 0.5, y = 0.3, cex=0.5, "efficieny above average", col = "#35978f")
text(x = 0.5, y = 0.6, "efficieny below average", col = "#bf812d")
layout(matrix(c(1, 2), ncol = 2), widths=c(5, 1))
par(mar=rep(0, 4))
set.seed(152)
wordcloud(words = type_summary$RequestType, type_summary$count,
colors = type_summary$colorlist, ordered.colors = TRUE,
rot.per = 0.5)
plot.new()
text(x = 0.5, y = 0.3, cex=0.5, "efficieny above average", col = "#35978f")
text(x = 0.5, y = 0.6, "efficieny below average", col = "#bf812d")
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
income_plot(c("4", "8"))
employment_plot(c("4", "8"))
shiny::runApp('fight-on/Shiny_cd_summary')
cor(filter(zip_merged, RequestType == "Metal/Household Appliances")[,c(4:7)])
}
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
zip = request_data %>%
group_by(ZipCode, RequestType) %>%
summarise(count = n()) %>%
group_by(ZipCode) %>%
mutate(req_prop = round(100 * count / sum(count),1))
zip = filter(zip, !is.na(ZipCode), ZipCode != "", ZipCode != "0")
zip_summary = read.csv("/Users/hzdy1994/Desktop/DSO545/Final project/zip summary statistics_2014.csv")
View(zip_summary)
zip_merged = merge(zip, zip_summary, by.x = "Zip", by.y = "Zip.Code")
zip_merged = merge(zip, zip_summary, by.x = "ZipCode", by.y = "Zip")
View(zip_merged)
zip_merged = select(zip_merged, ZipCode, RequestType, count, req_prop, Median_Age, Unemployment_Rate, Median_Household_Income)
zip_merged = select(zip_merged, ZipCode, RequestType, count, req_prop, Median_Age, Unemployement_Rate, Median_Household_Income)
colnames(zip_merged) = c("ZipCode", "RequestType", "count", "req_prop", "Median_Age", "Unemployment_Rate", "Median_Household_Income")
cor(filter(zip_merged, RequestType == "Bulky Items")[,c(4:7)])
zip_summary = read.csv("/Users/hzdy1994/Desktop/DSO545/Final project/zip summary statistics_2014.csv")
zip_merged = merge(zip, zip_summary, by.x = "ZipCode", by.y = "Zip")
zip_merged = select(zip_merged, ZipCode, RequestType, count, req_prop, Median_Age, Unemployment_Rate, Median_Household_Income)
cor(filter(zip_merged, RequestType == "Bulky Items")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Dead Animal Removal")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Graffiti Removal")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Homeless Encampment")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Metal/Household Appliances")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Illegal Dumping Pickup")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Electronic Waste")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Report Water Waste")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Single Streetlight Issue")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Multiple Streetlight Issue")[,c(4:7)])
cor(filter(zip_merged, RequestType == "Feedback")[,c(4:7)])
rm(zip, zip_summary)
}
shiny::runApp('fight-on/Shiny_cd_summary')
request_social_plot("Graffiti Removal", "Median_Household_Income")
request_social_plot <- function(req_type, social) {
selected = zip_merged %>%
filter(RequestType == req_type)
ggplot(selected, aes(x = ifelse(social == "Median_Household_Income",
log(Median_Household_Income),
Median_Age),
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, "Requests Proportion v.s. Median Income"),
subtitle = paste("correlation:",
round(cor(log(selected$`Median.Income`), selected$req_prop),2)
)) +
ylab("Regional Request Proportion") +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Graffiti Removal", "Median_Household_Income")
quit
request_social_plot <- function(req_type, social) {
selected = zip_merged %>%
filter(RequestType == req_type)
ggplot(selected, aes(x = ifelse(social == "Median_Household_Income",
log(Median_Household_Income),
Median_Age),
y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, paste("Requests Proportion v.s. ", social)),
subtitle = paste("correlation:",
round(cor(ifelse(social == "Median_Household_Income",
log(Median_Household_Income),
Median_Age),
selected$req_prop),2)
)) +
ylab("Regional Request Proportion") +
theme(plot.title = element_text(hjust = 0.5))
}
request_social_plot("Graffiti Removal", "Median_Household_Income")
request_social_plot <- function(req_type, social) {
selected = zip_merged %>%
filter(RequestType == req_type)
if (social == "Median_Household_Income") {
ggplot(selected, aes(x = log(Median_Household_Income), y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, paste("Requests Proportion v.s. ", social)),
subtitle = paste("correlation:",
round(cor(log(selected$Median_Household_Income), selected$req_prop),2)
)) +
ylab("Regional Request Proportion") +
theme(plot.title = element_text(hjust = 0.5))
} else {
ggplot(selected, aes(x = Median_Age, y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, paste("Requests Proportion v.s. ", social)),
subtitle = paste("correlation:",
round(cor(selected$Median_Age, selected$req_prop),2)
)) +
ylab("Regional Request Proportion") +
theme(plot.title = element_text(hjust = 0.5))
}
}
request_social_plot("Graffiti Removal", "Median_Household_Income")
request_social_plot <- function(req_type, social) {
selected = zip_merged %>%
filter(RequestType == req_type, Median_Household_Income > 0)
if (social == "Median_Household_Income") {
ggplot(selected, aes(x = log(Median_Household_Income), y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, paste("Requests Proportion v.s. ", social)),
subtitle = paste("correlation:",
round(cor(log(selected$Median_Household_Income), selected$req_prop),2)
)) +
ylab("Regional Request Proportion") +
theme(plot.title = element_text(hjust = 0.5))
} else {
ggplot(selected, aes(x = Median_Age, y = req_prop)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle(paste(req_type, paste("Requests Proportion v.s. ", social)),
subtitle = paste("correlation:",
round(cor(selected$Median_Age, selected$req_prop),2)
)) +
ylab("Regional Request Proportion") +
theme(plot.title = element_text(hjust = 0.5))
}
}
request_social_plot("Graffiti Removal", "Median_Household_Income")
request_social_plot("Metal/Household Appliances", "Median_Household_Income")
request_social_plot("Metal/Household Appliances", "Median_Age")
shiny::runApp('fight-on/Shiny_cd_summary')
request_social_plot("Metal/Household Appliances", "Median_Household_Income")
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
request_social_plot("Metal/Household Appliances", "Median_Age")
request_social_plot("Metal/Household Appliances", "Median_Age")
request_social_plot("Metal/Household Appliances", "Median_Age")
shiny::runApp('fight-on/Shiny_cd_summary')
save.image("~/Desktop/DSO545/Final project/fight-on/all_data_for_shiny.RData")
View(request_data)
setwd("~/Desktop/DSO545/Final project")
load("processed_requests2.RData")
dep_eff<- request_data %>%
mutate(update_time = UpdatedDate - CreatedDate) %>%
group_by(Owner, RequestSource) %>%
summarise(avg_update = mean(update_time)) %>%
filter(!avg_update == 0)
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
rm(zip_vec, zip_vec2, population_zip, requests_zip)
rm(request_data)
shiny::runApp('fight-on/Shiny_cd_summary')
save.image("~/Desktop/DSO545/Final project/fight-on/all_data_for_shiny.RData")
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
shiny::runApp('fight-on/Shiny_cd_summary')
setwd("~/Desktop/DSO545/Final project")
load("processed_requests2.RData")
request_data$duration = round((request_data$UpdatedDate-request_data$CreatedDate)/(60*60),2)
request_data = mutate(request_data, update_duration = ifelse(duration <= 0, 0, duration))
request_data$duration = NULL
View(request_data)
View(CD_summary)
rm(population_zip, requests_zip, zip_vec, zip_vec2)
rm(request_data)
load("all_data_for_shiny.RData")

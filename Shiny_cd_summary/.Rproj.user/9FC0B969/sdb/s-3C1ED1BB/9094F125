{
    "contents" : "library(dplyr)\nlibrary(plotly)\nlibrary(wordcloud)\nlibrary(lubridate)\n\n# load(\"all_data_for_shiny.RData\")\n\n################## cd_top_requests #####################\n# cd_top_requests <- function(data, cd) {\n#     summary = data %>%\n#         filter(CD %in% cd) %>%\n#         group_by(RequestType) %>%\n#         summarise(count = n()) %>%\n#         arrange(-count) %>%\n#         top_n(3)\n#     colnames(summary) = c(\"Top Requests Type\", \"Requests counts\")\n#     summary\n# }\n\n\n################## cd_key_stats #####################\ncd_key_stats <- function(data, cd) {\n    stats = t(filter(data, `Council District` %in% cd))\n    cd_names = stats[1,]\n    stats = as.data.frame(stats[2:nrow(stats),])\n    colnames(stats) = cd_names\n    stats\n}\n\n\n################## income_plots #####################\nincome_plot <- function(cd) {\n    selected = as.data.frame(filter(CD_summary, \n                                    `Council District` %in% cd, \n                                    `Council District` != \"city of LA\"))\n    ggplot(CD_summary[1:15,], aes(x = `Median Household Income($000s)`,\n                           y = `Requests per 1000 Residents`)) +\n        geom_point(aes(text = paste(\"Council District: \", `Council District`))) +\n        geom_smooth(method = \"lm\") +\n        ylim(0, 500) +\n        geom_point(data = selected,\n                   aes(x = `Median Household Income($000s)`,\n                       y = `Requests per 1000 Residents`),\n                   size = 5, color = \"red\") +\n        ggtitle(\"Requests v.s. Income\", \n                subtitle = \"Correlation: -0.92\") +\n        theme(plot.title = element_text(hjust = 0.5)) \n}\n\n\n################## employment_plots #####################\nemployment_plot <- function(cd) {\n    selected = as.data.frame(filter(CD_summary, \n                                    `Council District` %in% cd, \n                                    `Council District` != \"city of LA\"))\n    ggplot(CD_summary[1:15,], aes(x = `Unemployment Rate`,\n                                  y = `Requests per 1000 Residents`)) +\n        geom_point(aes(text = paste(\"Council District: \", `Council District`))) +\n        geom_smooth(method = \"lm\") +\n        ylim(0, 500) +\n        geom_point(data = selected,\n                   aes(x = `Unemployment Rate`,\n                       y = `Requests per 1000 Residents`),\n                  size = 5, color = \"red\") +\n        ggtitle(\"Requests v.s. Unemployment Rate\", \n                subtitle = \"Correlation: 0.76\") +\n        theme(plot.title = element_text(hjust = 0.5)) \n}\n\n\n################## type_summary_table #####################\ntype_summary_table <- function() {\n    summary = mutate(type_summary, above = ifelse(overtime == TRUE, \"below average\", \"\"))\n    summary = summary %>%\n        select(RequestType, count, above) %>%\n        arrange(-count)\n    \n    colnames(summary) = c(\"Request Type\", \"Requests counts\", \"Update Efficiency\")\n    summary\n}\n\n################## request_social_plot #####################\nrequest_social_plot <- function(req_type, social) {\n    selected = zip_merged %>%\n        filter(RequestType == req_type, Median_Household_Income > 0)\n    \n    if (social == \"Median_Household_Income\") {\n        ggplot(selected, aes(x = log(Median_Household_Income), y = req_prop)) +\n            geom_point() +\n            geom_smooth(method = \"lm\") +\n            ggtitle(paste(req_type, \"Requests Proportion v.s. Median Household Income\"),\n                    subtitle = paste(\"correlation:\", \n                                     round(cor(log(selected$Median_Household_Income), selected$req_prop),2)\n                    )) +\n            xlab(\"Log Meidian Household Income\") +\n            ylab(\"Regional Request Proportion\") +\n            theme(plot.title = element_text(hjust = 0.5))\n    } else {\n        ggplot(selected, aes(x = Median_Age, y = req_prop)) +\n            geom_point() +\n            geom_smooth(method = \"lm\") +\n            ggtitle(paste(req_type, \"Requests Proportion v.s. Median Age\"),\n                    subtitle = paste(\"correlation:\", \n                                     round(cor(selected$Median_Age, selected$req_prop),2)\n                    )) +\n            xlab(\"Median Age\") +\n            ylab(\"Regional Request Proportion\") +\n            theme(plot.title = element_text(hjust = 0.5))        \n    }\n}\n\n# request_social_plot(\"Metal/Household Appliances\", \"Median_Age\")\n\n################## efficiency analysis #####################\n### compare department efficiency and request source - dep_source\n\n# dep_eff<- request_data %>%\n#     mutate(update_time = UpdatedDate - CreatedDate) %>%\n#     group_by(Owner, RequestSource) %>%\n#     summarise(avg_update = mean(update_time)) %>%\n#     filter(!avg_update == 0)\n# \n# dep_eff$avg_update = as.numeric(dep_eff$avg_update)\n# dep_eff$avg_update = dep_eff$avg_update/6400\n# round(dep_eff$avg_update,2)\n\ndef_eff_plot <- function() {\n    ggplot(dep_eff, aes(x = Owner, y = RequestSource, fill = avg_update)) +\n        geom_tile() +\n        scale_fill_gradient(low = \"white\", high = \"darkred\") +\n        ggtitle(\"Service response time across department and request source\") +\n        xlab(\"Department assigned\") +\n        ylab(\"Source of Request\") +\n        theme(axis.text.x = element_text(angle = 30, hjust = 1)) +\n        guides(fill=guide_legend(title=\"Average response(hours)\"))\n}\n\n### type resolution efficiency divided by department - dep_type\n\n# type_eff <- request_data %>%\n#     mutate(update_time = UpdatedDate - CreatedDate) %>%\n#     group_by(Owner,RequestType) %>%\n#     summarise(avg_update = mean(update_time)) %>%\n#     filter(!avg_update == 0)\n# \n# type_eff$avg_update = as.numeric(type_eff$avg_update)\n# type_eff$avg_update = type_eff$avg_update/6400\n# round(type_eff$avg_update,2)\n\ntype_eff_plot <- function() {\n    ggplot(type_eff, aes(x = RequestType, y = avg_update,color = Owner)) +\n        geom_point(size = 5) +\n        theme(axis.text.x = element_text(angle = 30, hjust = 1)) +\n        ggtitle(\"Service response time across department and request type\") +\n        xlab(\"Service Request Type\") +\n        ylab(\"Average response(hours)\") +\n        theme(axis.text.x = element_text(angle = 30, hjust = 1)) +\n        guides(fill=guide_legend(title=\"Department\")) \n}\n\n\n### department efficiency in different cd - dep_cd\n\n# cd_eff <- request_data %>%\n#     mutate(update_time = UpdatedDate - CreatedDate) %>%\n#     group_by(Owner,CD) %>%\n#     summarise(avg_update = mean(update_time)) %>%\n#     filter(!avg_update == 0) %>%\n#     filter(!is.na(CD))\n# \n# cd_eff$avg_update = as.numeric(cd_eff$avg_update)\n# cd_eff$avg_update = cd_eff$avg_update/6400\n# round(cd_eff$avg_update,2)\n\ncd_eff_plot <- function() {\n    ggplot(cd_eff, aes(x = factor(CD), y = avg_update,color = Owner)) +\n        geom_point(size = 5) +\n        ggtitle(\"Resolution Efficiency Across Council Districts and Department\") +\n        xlab(\"Council Districts\") +\n        ylab(\"Average updated time(hours)\") +\n        guides(fill = guide_legend(title = \"Department\"))\n}\n",
    "created" : 1480897799292.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2769376607",
    "id" : "9094F125",
    "lastKnownWriteTime" : 1481058210,
    "path" : "~/Desktop/DSO545/Final project/fight-on/Shiny_cd_summary/cd_summary_support.R",
    "project_path" : "cd_summary_support.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}